using System.Diagnostics.CodeAnalysis;
using Xunit;

namespace TransparentValueObjects.Tests.PostInitializationOutput.AugmentInterfaces;

[SuppressMessage("ReSharper", "InconsistentNaming")]
public class IDefaultValueTests
{
    private const string Expected = /*lang=csharp*/
"""
// <auto-generated/>

namespace TransparentValueObjects
{
    /// <summary>
    /// Represents the interface for <see cref="global::TransparentValueObjects.DefaultValueAugment"/>
    /// with members that the consumer has to implement to support the augment.
    /// </summary>
	public interface IDefaultValue<out TValueObject, TInnerValue>
		where TValueObject : global::TransparentValueObjects.IValueObject<TInnerValue>
		where TInnerValue : notnull
	{
		/// <summary>
		/// Gets the default value for this value object.
		/// </summary>
		public static abstract TValueObject DefaultValue { get; }
	}
}
""";

    [Fact]
    public void Test_Source()
    {
        TestHelpers.TestPostInitializationOutput("IDefaultValue.g.cs", Expected);
    }
}
