// <auto-generated/>

namespace TransparentValueObjects
{
	/// <summary>
	/// Augment the value object with additional functionality.
	/// </summary>
	/// <typeparam name="T0">The type of augment you want to apply to the value object.</typeparam>
	internal interface IAugmentWith<T0>
		where T0 : global::TransparentValueObjects.IAugment
	{ }

	/// <summary>
	/// Augment the value object with additional functionality.
	/// </summary>
	/// <typeparam name="T0">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T1">The type of augment you want to apply to the value object.</typeparam>
	internal interface IAugmentWith<T0,T1>
		where T0 : global::TransparentValueObjects.IAugment
		where T1 : global::TransparentValueObjects.IAugment
	{ }

	/// <summary>
	/// Augment the value object with additional functionality.
	/// </summary>
	/// <typeparam name="T0">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T1">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T2">The type of augment you want to apply to the value object.</typeparam>
	internal interface IAugmentWith<T0,T1,T2>
		where T0 : global::TransparentValueObjects.IAugment
		where T1 : global::TransparentValueObjects.IAugment
		where T2 : global::TransparentValueObjects.IAugment
	{ }

	/// <summary>
	/// Augment the value object with additional functionality.
	/// </summary>
	/// <typeparam name="T0">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T1">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T2">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T3">The type of augment you want to apply to the value object.</typeparam>
	internal interface IAugmentWith<T0,T1,T2,T3>
		where T0 : global::TransparentValueObjects.IAugment
		where T1 : global::TransparentValueObjects.IAugment
		where T2 : global::TransparentValueObjects.IAugment
		where T3 : global::TransparentValueObjects.IAugment
	{ }

	/// <summary>
	/// Augment the value object with additional functionality.
	/// </summary>
	/// <typeparam name="T0">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T1">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T2">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T3">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T4">The type of augment you want to apply to the value object.</typeparam>
	internal interface IAugmentWith<T0,T1,T2,T3,T4>
		where T0 : global::TransparentValueObjects.IAugment
		where T1 : global::TransparentValueObjects.IAugment
		where T2 : global::TransparentValueObjects.IAugment
		where T3 : global::TransparentValueObjects.IAugment
		where T4 : global::TransparentValueObjects.IAugment
	{ }

	/// <summary>
	/// Augment the value object with additional functionality.
	/// </summary>
	/// <typeparam name="T0">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T1">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T2">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T3">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T4">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T5">The type of augment you want to apply to the value object.</typeparam>
	internal interface IAugmentWith<T0,T1,T2,T3,T4,T5>
		where T0 : global::TransparentValueObjects.IAugment
		where T1 : global::TransparentValueObjects.IAugment
		where T2 : global::TransparentValueObjects.IAugment
		where T3 : global::TransparentValueObjects.IAugment
		where T4 : global::TransparentValueObjects.IAugment
		where T5 : global::TransparentValueObjects.IAugment
	{ }

	/// <summary>
	/// Augment the value object with additional functionality.
	/// </summary>
	/// <typeparam name="T0">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T1">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T2">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T3">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T4">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T5">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T6">The type of augment you want to apply to the value object.</typeparam>
	internal interface IAugmentWith<T0,T1,T2,T3,T4,T5,T6>
		where T0 : global::TransparentValueObjects.IAugment
		where T1 : global::TransparentValueObjects.IAugment
		where T2 : global::TransparentValueObjects.IAugment
		where T3 : global::TransparentValueObjects.IAugment
		where T4 : global::TransparentValueObjects.IAugment
		where T5 : global::TransparentValueObjects.IAugment
		where T6 : global::TransparentValueObjects.IAugment
	{ }

	/// <summary>
	/// Augment the value object with additional functionality.
	/// </summary>
	/// <typeparam name="T0">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T1">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T2">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T3">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T4">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T5">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T6">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T7">The type of augment you want to apply to the value object.</typeparam>
	internal interface IAugmentWith<T0,T1,T2,T3,T4,T5,T6,T7>
		where T0 : global::TransparentValueObjects.IAugment
		where T1 : global::TransparentValueObjects.IAugment
		where T2 : global::TransparentValueObjects.IAugment
		where T3 : global::TransparentValueObjects.IAugment
		where T4 : global::TransparentValueObjects.IAugment
		where T5 : global::TransparentValueObjects.IAugment
		where T6 : global::TransparentValueObjects.IAugment
		where T7 : global::TransparentValueObjects.IAugment
	{ }

	/// <summary>
	/// Augment the value object with additional functionality.
	/// </summary>
	/// <typeparam name="T0">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T1">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T2">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T3">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T4">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T5">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T6">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T7">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T8">The type of augment you want to apply to the value object.</typeparam>
	internal interface IAugmentWith<T0,T1,T2,T3,T4,T5,T6,T7,T8>
		where T0 : global::TransparentValueObjects.IAugment
		where T1 : global::TransparentValueObjects.IAugment
		where T2 : global::TransparentValueObjects.IAugment
		where T3 : global::TransparentValueObjects.IAugment
		where T4 : global::TransparentValueObjects.IAugment
		where T5 : global::TransparentValueObjects.IAugment
		where T6 : global::TransparentValueObjects.IAugment
		where T7 : global::TransparentValueObjects.IAugment
		where T8 : global::TransparentValueObjects.IAugment
	{ }

	/// <summary>
	/// Augment the value object with additional functionality.
	/// </summary>
	/// <typeparam name="T0">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T1">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T2">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T3">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T4">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T5">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T6">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T7">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T8">The type of augment you want to apply to the value object.</typeparam>
	/// <typeparam name="T9">The type of augment you want to apply to the value object.</typeparam>
	internal interface IAugmentWith<T0,T1,T2,T3,T4,T5,T6,T7,T8,T9>
		where T0 : global::TransparentValueObjects.IAugment
		where T1 : global::TransparentValueObjects.IAugment
		where T2 : global::TransparentValueObjects.IAugment
		where T3 : global::TransparentValueObjects.IAugment
		where T4 : global::TransparentValueObjects.IAugment
		where T5 : global::TransparentValueObjects.IAugment
		where T6 : global::TransparentValueObjects.IAugment
		where T7 : global::TransparentValueObjects.IAugment
		where T8 : global::TransparentValueObjects.IAugment
		where T9 : global::TransparentValueObjects.IAugment
	{ }

}

